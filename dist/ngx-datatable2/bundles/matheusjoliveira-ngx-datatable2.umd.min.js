!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("@angular/forms"),require("@angular/common"),require("ngx-pagination")):"function"==typeof define&&define.amd?define("@matheusjoliveira/ngx-datatable2",["exports","@angular/core","rxjs","@angular/forms","@angular/common","ngx-pagination"],t):t(((e=e||self).matheusjoliveira=e.matheusjoliveira||{},e.matheusjoliveira["ngx-datatable2"]={}),e.ng.core,e.rxjs,e.ng.forms,e.ng.common,e.ngxPagination)}(this,(function(e,t,n,r,o,a){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var i=function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var s=function(){function e(){this.dataShowingSubject=new n.Subject}return e.prototype.setSataShowingSubject=function(e){this.dataShowingSubject.next(e)},e.decorators=[{type:t.Injectable}],e}();var l=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"ngx-caption",template:"\r\n        \r\n<ng-content></ng-content>\r\n\r\n",changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],e.ctorParameters=function(){return[]},e}(),d=function(){function e(e,r){this.dataShowingService=e,this.cdr=r,this.ngUnsubscribe=new n.Subject,this.customOptions={emptyDataMessage:"No data available in table",rowClickEvent:!1,enableChangeRowPerPageMenu:!0,rowPerPageMenu:[10,20,50,100],rowPerPage:10,showLoader:!1,loaderText:"Loading...",checkboxes:!1,rowDetailTemplate:void 0,enableSearch:!0,searchPlaceholder:"Search",showOnlyTotalRowsPerPage:!1,paginationLabels:{showing:"Showing",to:"to",of:"of",entries:"entries",previousLabel:"Previous",nextLabel:"Next"}},this._options={},this._data=[],this.tableId="ngxDataTableId",this.columns=[],this.rowClick=new t.EventEmitter,this.checkboxClick=new t.EventEmitter,this.searchText="",this.currentPage=1,this.orderBy={order:"",key:""},this.dataShowing={start:0,end:0,len:0},this.styleParams={pinnedScollerMarginLeft:0,pinnedFlag:!1},this.selectedCheckboxes=new Set,this.selectedCheckList=[],this.openRowDetailsId=new Set}return Object.defineProperty(e.prototype,"data",{get:function(){return this._data},set:function(e){var t=this;this._data=[],e.forEach((function(e,n){t._data.push(i({},e,{_autoId:n}))}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){return this._options},set:function(e){this._options=i({},this.customOptions,this._options,e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.columns.map((function(t,n){t.sorting=!t.hasOwnProperty("sorting")||t.sorting,t.headAlign=t.hasOwnProperty("headAlign")?t.headAlign.toLowerCase():"left",t.sortingOrder="",t.hasOwnProperty("pinned")&&1==t.pinned&&(t.width=t.hasOwnProperty("width")?t.width:100,t.pinnedMarginLeft=e.styleParams.pinnedScollerMarginLeft,e.styleParams.pinnedScollerMarginLeft+=parseInt(t.width)+20)})),this.dataShowingFn(this.currentPage,this.options.rowPerPage,this.data.length),this.dataShowingService.dataShowingSubject.subscribe((function(t){t.itemPerPage=t.hasOwnProperty("itemPerPage")?t.itemPerPage:e.options.rowPerPage,t.currentPage=t.hasOwnProperty("currentPage")?t.currentPage:e.currentPage,t.len=t.hasOwnProperty("len")?t.len:e.dataShowing.len,e.dataShowingFn(t.currentPage,t.itemPerPage,t.len)}))},e.prototype.ngAfterContentInit=function(){},e.prototype.ngOnChanges=function(e){},e.prototype.onInputSearch=function(){this.currentPage=1},e.prototype.onChangeItemPerPage=function(){this.currentPage=1,this.dataShowingService.setSataShowingSubject({currentPage:this.currentPage,itemPerPage:this.options.rowPerPage})},e.prototype.onPageChange=function(e){this.currentPage=e,this.dataShowingService.setSataShowingSubject({currentPage:e})},e.prototype.onClickOrderBy=function(e,t){1==e.sorting&&(this.columns.map((function(e){e.sortingOrder=""})),this.orderBy=i({},this.orderBy,{order:"asc"==this.orderBy.order?"desc":"asc",key:e.key}),this.columns[t].sortingOrder=this.orderBy.order)},e.prototype.onRowClick=function(e){this.options.rowClickEvent&&this.rowClick.emit(e)},e.prototype.onCheckboxSelect=function(e){this.selectedCheckboxes.has(e._autoId)?(this.selectedCheckboxes.delete(e._autoId),this.selectedCheckList=this.selectedCheckList.filter((function(t){return t._autoId!=e._autoId}))):(this.selectedCheckboxes.add(e._autoId),this.selectedCheckList.push(e)),this.checkboxClick.emit(this.selectedCheckList)},e.prototype.onCheckboxSelectAll=function(e){var t=this;this.selectedCheckboxes=new Set,this.selectedCheckList=[],e&&(this.selectedCheckList=this.data.filter((function(e){return t.selectedCheckboxes.add(e._autoId),!0}))),this.checkboxClick.emit(this.selectedCheckList)},e.prototype.onClickRowDettailArrowOpen=function(e){this.openRowDetailsId.has(e._autoId)?this.openRowDetailsId.delete(e._autoId):this.openRowDetailsId.add(e._autoId)},e.prototype.onClickRowDettailAllArrowOpen=function(){var e=this;this.openRowDetailsId.size!=this.data.length?(this.openRowDetailsId=new Set,this.data.filter((function(t){return e.openRowDetailsId.add(t._autoId),!0}))):this.openRowDetailsId=new Set},e.prototype.identify=function(e,t){return e},e.prototype.dataShowingFn=function(e,t,n){this.dataShowing.start=0==n?0:(e-1)*t+1,this.dataShowing.end=e*t>n?n:e*t,this.dataShowing.len=n},e.decorators=[{type:t.Component,args:[{selector:"ngx-datatable2",template:'<div color="darken" class="jarviswidget">\r\n    \x3c!-- table caption --\x3e\r\n    <header *ngIf="captionRef">\r\n        <ng-content select="ngx-caption"></ng-content>\r\n    </header>\r\n    <div class="dataTables_wrapper">\r\n        \x3c!-- search bar with page per item --\x3e\r\n        <div class="row no-row-margin" style="margin-top: 5px;">\r\n            <div *ngIf="options.enableSearch == true" class="col-xs-6 col-sm-6 col-6 text-left">\r\n                <label style="font-weight: 100;">\r\n                    <input type="text" [id]="\'search_\'+tableId" [(ngModel)]="searchText" (input)="onInputSearch()"\r\n                        name="search" [placeholder]="options.searchPlaceholder" autocomplete="off"\r\n                        style="border-radius: 0px;" class="form-control input-md" />\r\n                </label>\r\n            </div>\r\n            <div *ngIf="options.enableChangeRowPerPageMenu == true" class="col-sm-6 col-xs-6 col-6 text-right">\r\n                <label style="font-weight: 100;">\r\n                    <select (change)="onChangeItemPerPage()" style="border-radius: 0px;"\r\n                        [(ngModel)]="options.rowPerPage" name="rowPerPage" class="form-control"\r\n                        [id]="\'itemPerPage_\'+tableId">\r\n                        <option *ngFor="let item of options.rowPerPageMenu" [ngValue]="item">{{item}}</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n        </div>\r\n\r\n        <br *ngIf="options.enableSearch == true || options.enableChangeRowPerPageMenu == true">\r\n        <hr *ngIf="options.enableSearch == true || options.enableChangeRowPerPageMenu == true">\r\n\r\n        <div class="zui-wrapper">\r\n            <div class="zui-scroller" [style.margin-left]="styleParams.pinnedScollerMarginLeft+\'px\'">\r\n                <table [id]="tableId" class=" zui-table dataTable  {{tableClass}}" role="grid"\r\n                    aria-describedby="DataTables_Table_0_info" width="100%">\r\n                    \x3c!-- table head code --\x3e\r\n                    <thead _ngcontent-qqc-c0="">\r\n                        <tr role="row">\r\n                            <th *ngIf="options.rowDetailTemplate" style=" text-align: center; vertical-align: middle;">\r\n                                <div (click)="onClickRowDettailAllArrowOpen()"\r\n                                    [class.triangle-right]="this.openRowDetailsId.size != this.data.length || this.data.length == 0 "\r\n                                    [class.triangle-down]="this.openRowDetailsId.size == this.data.length && this.data.length != 0">\r\n                                </div>\r\n                            </th>\r\n                            \x3c!-- [style.min-width]="options.checkboxAsPin && styleParams.pinnedFlag ? \'13px\' : \'auto\'"\r\n                                [style.max-width]="options.checkboxAsPin && styleParams.pinnedFlag ? \'13px\' : \'auto\'"\r\n                                [class.zui-sticky-col]="options.checkboxAsPin && styleParams[\'pinnedFlag\']" --\x3e\r\n                            <th *ngIf="options.checkboxes" style="text-align: center; vertical-align: middle;">\r\n                                <input class="ngx-form-checkbox-head" type="checkbox" id="checkbox-all"\r\n                                    [checked]="this.selectedCheckboxes.size == this.data.length && this.data.length != 0"\r\n                                    (change)="onCheckboxSelectAll($event.target.checked)" />\r\n                            </th>\r\n                            <th *ngFor="let column of columns; let i = index; trackBy: identify"\r\n                                (click)="onClickOrderBy(column, i)" [style.min-width]="column.width+\'px\'"\r\n                                [style.max-width]="column.width+\'px\'"\r\n                                [style.vertical-align]="column.vAlign && column.vAlign.head"\r\n                                [style.text-align]="column.align && column.align.head"\r\n                                [class.zui-sticky-col]="column.pinned"\r\n                                [style.margin-left]="column.pinnedMarginLeft+\'px\'" yy>\r\n                                <span [innerHTML]="column.title" [class.wrap]="column.noWrap && column.noWrap.head"\r\n                                    [class.sort-by]="column.sorting && column.sortingOrder==\'\'"\r\n                                    [class.sort-by-asc]="column.sorting && column.sortingOrder==\'asc\'"\r\n                                    [class.sort-by-desc]="column.sorting && column.sortingOrder==\'desc\'"></span>\r\n                                \x3c!-- [ngClass]="{sort-by:column.sorting==true, sort-by-asc:column.sorting==true&&column.sortingOrder==\'asc\', sort-by-desc:column.sorting==true&&column.sortingOrder==\'desc\'}"  --\x3e\r\n                                \x3c!-- <div class="sorting"style="display: inline;"><span>&#8593;</span> <span>&#8595;</span></div>\t --\x3e\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container *ngFor="let row of data \r\n                            | search:searchText \r\n                            | sort:orderBy \r\n                            | paginate: { id: \'pagination_\'+tableId, itemsPerPage: options.rowPerPage, currentPage:currentPage }; \r\n                            trackBy: identify; let i = index;">\r\n                            <tr [ngClass]="{ \'cus-cursor-pointer\':options.rowClickEvent}" (click)="onRowClick(row)">\r\n                                \x3c!-- row Detail code --\x3e\r\n                                <td *ngIf="options.rowDetailTemplate"\r\n                                    style=" text-align: center; vertical-align: middle;">\r\n                                    <div (click)="onClickRowDettailArrowOpen(row)"\r\n                                        [class.triangle-right]="!openRowDetailsId.has(row._autoId)"\r\n                                        [class.triangle-down]="openRowDetailsId.has(row._autoId)">\r\n                                    </div>\r\n                                </td>\r\n                                \x3c!-- checck box code --\x3e\r\n                                \x3c!-- [style.min-width]="options.checkboxAsPin && styleParams.pinnedFlag ? \'13px\' : \'auto\'"\r\n                                    [style.max-width]="options.checkboxAsPin && styleParams.pinnedFlag ? \'13px\' : \'auto\'"\r\n                                    [class.zui-sticky-col]="options.checkboxAsPin && styleParams[\'pinnedFlag\']" --\x3e\r\n                                <td *ngIf="options.checkboxes" style="text-align: center; vertical-align: middle;">\r\n                                    <input class="ngx-form-checkbox" type="checkbox" id="checkbox-{{row._autoId}}"\r\n                                        [checked]="selectedCheckboxes.has(row._autoId)"\r\n                                        (change)="onCheckboxSelect(row)" />\r\n                                </td>\r\n                                \x3c!-- dynamacally generated column --\x3e\r\n                                <td *ngFor="let column of columns;let j=index;" [style.min-width]="column.width+\'px\'"\r\n                                    [style.max-width]="column.width+\'px\'"\r\n                                    [class.wrap]="column.noWrap && column.noWrap.body"\r\n                                    [style.vertical-align]="column.vAlign && column.vAlign.body"\r\n                                    [style.text-align]="column.align && column.align.body"\r\n                                    [class.zui-sticky-col]="column.pinned"\r\n                                    [style.margin-left]="column.pinnedMarginLeft+\'px\'">\r\n                                    <ng-container *ngIf="!column.cellTemplate">{{row[column.key]}}</ng-container>\r\n                                    <ng-container *ngIf="column.cellTemplate" [ngTemplateOutlet]="column.cellTemplate"\r\n                                        [ngTemplateOutletContext]="{\r\n                                            $implicit: row,\r\n                                            rowIndex: row._autoId,\r\n                                            columnValue: row[column.key]\r\n                                        }">\r\n                                    </ng-container>\r\n\r\n                                </td>\r\n                            </tr>\r\n                            \x3c!-- row detail desccription code --\x3e\r\n                            <tr *ngIf="options.rowDetailTemplate && openRowDetailsId.has(row._autoId) ">\r\n                                <td\r\n                                    [attr.colspan]="columns.length+(options.checkboxes?1:0)+(options.rowDetailTemplate?1:0)">\r\n                                    <ng-container [ngTemplateOutlet]="options.rowDetailTemplate"\r\n                                        [ngTemplateOutletContext]="{\r\n                                            $implicit: row,\r\n                                            rowIndex: row._autoId\r\n                                        }">\r\n                                    </ng-container>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-container>\r\n\r\n                        <tr class="odd" *ngIf="!data.length && options.showLoader == false">\r\n                            <td valign="top"\r\n                                [attr.colspan]="columns.length+(options.checkboxes?1:0)+(options.rowDetailTemplate?1:0)"\r\n                                class="dataTables_empty">\r\n                                {{options.emptyDataMessage}}\r\n                            </td>\r\n                        </tr>\r\n                        <tr class="odd" *ngIf="options.showLoader == true">\r\n                            <td valign="top"\r\n                                [attr.colspan]="columns.length+(options.checkboxes?1:0)+(options.rowDetailTemplate?1:0)"\r\n                                class="dataTables_empty">\r\n                                {{options.loaderText}}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class="row no-row-margin" style="margin-top: 5px;">\r\n            <div class="col-sm-6 col-xs-12 col-12 custom-data-entries-align">\r\n                <div *ngIf="options.showOnlyTotalRowsPerPage == false"> {{options.paginationLabels.showing}}\r\n                    {{dataShowing.start}} {{options.paginationLabels.to}}\r\n                    {{dataShowing.end}} {{options.paginationLabels.of}} {{dataShowing.len}}\r\n                    {{options.paginationLabels.entries}}</div>\r\n\r\n                <div *ngIf="options.showOnlyTotalRowsPerPage == true"> {{dataShowing.len}}\r\n                    {{options.paginationLabels.entries}}\r\n                </div>\r\n            </div>\r\n            <div class="col-xs-12 col-sm-6 col-12 custom-pagination-align">\r\n                <pagination-controls [id]="\'pagination_\'+tableId" (pageChange)="onPageChange($event)"\r\n                    [previousLabel]="options.paginationLabels.previousLabel"\r\n                    [nextLabel]="options.paginationLabels.nextLabel"></pagination-controls>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[s],styles:['.jarviswidget{position:relative;border-radius:0;padding:0}.ui-sortable .jarviswidget-sortable>header{cursor:move;border-radius:0;line-height:normal;box-shadow:inset 0 -2px 0 rgba(0,0,0,.05);-moz-box-shadow:inset 0 -2px 0 rgba(0,0,0,.05);-webkit-box-shadow:inset 0 -2px 0 rgba(0,0,0,.05)}.ui-sortable .jarviswidget-sortable.jarviswidget-collapsed>header{border-radius:0}.jarviswidget-ctrls{width:auto;float:right;padding:0;margin:0}.jarviswidget-ctrls .button-icon{min-width:30px;height:32px;float:left;position:relative;font-family:Arial,Helvetica,sans-serif;border-left:1px solid rgba(0,0,0,.09)}.jarviswidget-ctrls .button-icon:hover{background-color:rgba(0,0,0,.05)}.jarviswidget-loader{width:32px;height:32px;margin:0;float:right;background-repeat:no-repeat;background-position:center center;display:none;text-align:center;line-height:32px;font-size:111%}.jarviswidget>div{border-top:none;float:left;width:100%;position:relative;font-size:13px;border-radius:0;margin:0;border-width:1px 1px 2px;border-style:solid;padding:0;overflow:visible;border-color:#ccc!important}.jarviswidget .widget-body{min-height:100px;position:relative;padding-bottom:13px}.jarviswidget .widget-body.widget-hide-overflow{overflow:hidden}.jarviswidget.well.transparent .widget-body.no-padding{margin:0!important}.jarviswidget.well{margin:0 0 30px}.jarviswidget.well>div{border:none!important;box-shadow:none!important;-webkit-box-shadow:none!important;-moz-box-shadow:none!important}.jarviswidget.well header{display:none}.jarviswidget-editbox{display:none;padding:10px}.jarviswidget-timestamp{font-size:12px;color:#868686;font-style:italic;margin:10px 0 0}.jarviswidget-placeholder{border-radius:0;margin-bottom:28px;padding:0;-khtml-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box}#jarviswidget-fullscreen-mode{width:100%;height:100%;position:fixed;top:0;left:0;z-index:1050}#jarviswidget-fullscreen-mode .jarviswidget{margin:0;border-radius:0}#jarviswidget-fullscreen-mode .jarviswidget>div{overflow-y:scroll;border-radius:0}#jarviswidget-fullscreen-mode>div>header{cursor:default}.jarviswidget>header{color:#333;border:1px solid #c2c2c2;background:#fafafa}.jarviswidget>div{background-color:#fff!important}.jarviswidget-editbox{border-bottom:1px solid #b1b1b1;background-color:#fff;margin:-13px -13px 13px}.no-padding .jarviswidget-editbox{margin:0 0 10px}.jarviswidget-placeholder{background-color:#ffc;border:1px dashed #a7a7a7}.jarviswidget-remove-colors{color:#333!important;padding:0!important;background:0 0!important}table.dataTable{clear:both;margin-bottom:6px!important;max-width:none!important;margin-top:0!important}table.dataTable td,table.dataTable th{box-sizing:content-box}table.dataTable td.dataTables_empty,table.dataTable th.dataTables_empty{text-align:center}table.dataTable.nowrap td,table.dataTable.nowrap th{white-space:nowrap}div.dataTables_wrapper div.dataTables_length label{font-weight:400;text-align:left;white-space:nowrap}div.dataTables_wrapper div.dataTables_length select{width:75px;display:inline-block}div.dataTables_wrapper div.dataTables_filter{text-align:right}div.dataTables_wrapper div.dataTables_filter label{font-weight:400;white-space:nowrap;text-align:left}div.dataTables_wrapper div.dataTables_filter input{margin-left:.5em;display:inline-block;width:auto}div.dataTables_wrapper div.dataTables_info{padding-top:8px;white-space:nowrap}div.dataTables_wrapper div.dataTables_paginate{margin:0;white-space:nowrap;text-align:right}div.dataTables_wrapper div.dataTables_paginate ul.pagination{margin:2px 0;white-space:nowrap}div.dataTables_wrapper div.dataTables_processing{position:absolute;top:50%;left:50%;width:200px;margin-left:-100px;margin-top:-26px;text-align:center;padding:1em 0}table.dataTable thead>tr>th.sorting,table.dataTable thead>tr>th.sorting_asc,table.dataTable thead>tr>th.sorting_desc,table.dataTable thead>tr>th>div.sorting,table.dataTable thead>tr>th>div.sorting_asc{padding-right:30px;text-align:right}.cus-cursor-pointer{cursor:pointer}.zui-table thead th{padding:10px;margin-top:-1px}.zui-table tbody td{padding:10px}.zui-wrapper{overflow:hidden;position:relative;width:100%}.zui-scroller{overflow-x:auto}.zui-table .zui-sticky-col{border-left:1px solid #ddd;border-right:1px solid #ddd;border-top:1px solid #ddd;border-bottom:1px solid #ddd;left:0;position:absolute;background-color:#f1f1f1}.table-bordered>thead>tr>td,.table-bordered>thead>tr>th{border-bottom-width:0}.pinned-column-bg-color{background-color:#f9f9f9;border-left:1px solid #ddd}.jarviswidget header{padding:0 5px;line-height:40px;background-color:#404040;border:1px solid #404040;color:#fff}.wrap{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.no-row-margin{margin-left:0!important;margin-right:0!important}.sort-by,.sort-by-asc,.sort-by-desc{padding-right:18px;position:relative;display:block;width:100%}.sort-by-asc:after,.sort-by-asc:before,.sort-by-desc:after,.sort-by-desc:before,.sort-by:after,.sort-by:before{border:4px solid transparent;content:"";display:block;height:0;right:5px;top:50%;position:absolute;width:0}.sort-by:before{border-bottom-color:#666;margin-top:-9px}.sort-by:after{border-top-color:#666;margin-top:1px}.sort-by-asc:before{border-bottom-color:#666;margin-top:-6px}.sort-by-desc:after{border-top-color:#666;margin-top:-1px}.custom-pagination-align{text-align:right!important}.custom-data-entries-align{text-align:left!important}.triangle-down{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-top:12px solid #555;cursor:pointer}.triangle-right{width:0;height:0;border-top:6px solid transparent;border-left:12px solid #555;border-bottom:6px solid transparent;cursor:pointer}@media screen and (max-width:767px){div.dataTables_wrapper div.dataTables_filter,div.dataTables_wrapper div.dataTables_info,div.dataTables_wrapper div.dataTables_length,div.dataTables_wrapper div.dataTables_paginate{text-align:center}}@media screen and (max-width:576px){.custom-data-entries-align,.custom-pagination-align{text-align:center!important}}']}]}],e.ctorParameters=function(){return[{type:s},{type:t.ChangeDetectorRef}]},e.propDecorators={tableId:[{type:t.Input}],columns:[{type:t.Input}],data:[{type:t.Input}],options:[{type:t.Input}],tableClass:[{type:t.Input}],rowClick:[{type:t.Output}],checkboxClick:[{type:t.Output}],captionRef:[{type:t.ContentChild,args:[l,{static:!1}]}]},e}();var c=function(){function e(e){this.dataShowingService=e}return e.prototype.transform=function(e,t){if(void 0!==e){if(void 0===t||0===Object.keys(t).length||""===t)return this.dataShowingService.setSataShowingSubject({len:e.length}),e;var n=e.filter((function(e){return JSON.stringify(Object.values(e)).toLowerCase().indexOf(t.trim().toLowerCase())>-1}));return this.dataShowingService.setSataShowingSubject({len:n.length}),n}},e.decorators=[{type:t.Pipe,args:[{name:"search"}]}],e.ctorParameters=function(){return[{type:s}]},e}();var p=function(){function e(){}return e.prototype.transform=function(e,t){var n=this;return t.key&&""!==t.key?""===t.order?e:"asc"===t.order?e.sort((function(e,r){return n.compare(e,r,t.key)})):e.sort((function(e,r){return n.compare(r,e,t.key)})):e},e.prototype.compare=function(e,t,n){return this.isNaN(e[n],t[n])?(""+e[n]).localeCompare(t[n]):parseFloat(e[n])<parseFloat(t[n])?-1:parseFloat(e[n])>parseFloat(t[n])?1:0},e.prototype.isNaN=function(e,t){return isNaN(parseFloat(e))||!isFinite(e)||isNaN(parseFloat(t))||!isFinite(t)},e.decorators=[{type:t.Pipe,args:[{name:"sort",pure:!0}]}],e}(),g=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[d,c,p,l],imports:[r.FormsModule,o.CommonModule,a.NgxPaginationModule],providers:[],exports:[d,l]}]}],e}();e.NgxDatatable2Module=g,e.NgxDatatableComponent=d,e.ɵa=s,e.ɵb=l,e.ɵc=c,e.ɵd=p,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=matheusjoliveira-ngx-datatable2.umd.min.js.map